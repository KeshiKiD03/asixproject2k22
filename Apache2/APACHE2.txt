APACHE2

sudo apt update

sudo apt install apache2

cryptosec@SOACryptosec:~$ sudo ufw app list
Available applications:
  Apache
  Apache Full
  Apache Secure
  Bind9
  OpenSSH

cryptosec@SOACryptosec:~$ sudo ufw allow 'Apache'
Rules updated
Rules updated (v6)

sudo systemctl status apache2

hostname -I

sudo mkdir /var/www/cryptosec

sudo chown -R $USER:$USER /var/www/cryptosec

sudo chmod -R 755 /var/www/cryptosec

sudo nano /var/www/cryptosec/index.html

<html>
    <head>
        <title>Welcome to CRYPTOSEC.NET!</title>
    <style>
        @import url(https://fonts.googleapis.com/css?family=Open+Sans);
.btn { display: inline-block; *display: inline; *zoom: 1; padding: 4px 10px 4px; margin-bottom: 0; font-size: 13px; line-height: 18px; color: #333333; text-align: center;text-shadow: 0 1px 1px rgba(255, 255, 255, 0.75); vertical-align: middle; background-color: #f5f5f5; background-image: -moz-linear-gradient(top, #ffffff, #e6e6e6); background-image: -ms-linear-gradient(top, #ffffff, #e6e6e6); background-image: -webkit-gradient(linear, 0 0, 0 100%, from(#ffffff), to(#e6e6e6)); background-image: -webkit-linear-gradient(top, #ffffff, #e6e6e6); background-image: -o-linear-gradient(top, #ffffff, #e6e6e6); background-image: linear-gradient(top, #ffffff, #e6e6e6); background-repeat: repeat-x; filter: progid:dximagetransform.microsoft.gradient(startColorstr=#ffffff, endColorstr=#e6e6e6, GradientType=0); border-color: #e6e6e6 #e6e6e6 #e6e6e6; border-color: rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25); border: 1px solid #e6e6e6; -webkit-border-radius: 4px; -moz-border-radius: 4px; border-radius: 4px; -webkit-box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.2), 0 1px 2px rgba(0, 0, 0, 0.05); -moz-box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.2), 0 1px 2px rgba(0, 0, 0, 0.05); box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.2), 0 1px 2px rgba(0, 0, 0, 0.05); cursor: pointer; *margin-left: .3em; }
.btn:hover, .btn:active, .btn.active, .btn.disabled, .btn[disabled] { background-color: #e6e6e6; }
.btn-large { padding: 9px 14px; font-size: 15px; line-height: normal; -webkit-border-radius: 5px; -moz-border-radius: 5px; border-radius: 5px; }
.btn:hover { color: #333333; text-decoration: none; background-color: #e6e6e6; background-position: 0 -15px; -webkit-transition: background-position 0.1s linear; -moz-transition: background-position 0.1s linear; -ms-transition: background-position 0.1s linear; -o-transition: background-position 0.1s linear; transition: background-position 0.1s linear; }
.btn-primary, .btn-primary:hover { text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.25); color: #ffffff; }
.btn-primary.active { color: rgba(255, 255, 255, 0.75); }
.btn-primary { background-color: #4a77d4; background-image: -moz-linear-gradient(top, #6eb6de, #4a77d4); background-image: -ms-linear-gradient(top, #6eb6de, #4a77d4); background-image: -webkit-gradient(linear, 0 0, 0 100%, from(#6eb6de), to(#4a77d4)); background-image: -webkit-linear-gradient(top, #6eb6de, #4a77d4); background-image: -o-linear-gradient(top, #6eb6de, #4a77d4); background-image: linear-gradient(top, #6eb6de, #4a77d4); background-repeat: repeat-x; filter: progid:dximagetransform.microsoft.gradient(startColorstr=#6eb6de, endColorstr=#4a77d4, GradientType=0);  border: 1px solid #3762bc; text-shadow: 1px 1px 1px rgba(0,0,0,0.4); box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.2), 0 1px 2px rgba(0, 0, 0, 0.5); }
.btn-primary:hover, .btn-primary:active, .btn-primary.active, .btn-primary.disabled, .btn-primary[disabled] { filter: none; background-color: #4a77d4; }
.btn-block { width: 100%; display:block; }

* { -webkit-box-sizing:border-box; -moz-box-sizing:border-box; -ms-box-sizing:border-box; -o-box-sizing:border-box; box-sizing:border-box; }

html { width: 100%; height:100%; overflow:hidden; }

body {
        width: 100%;
        height:100%;
        font-family: 'Open Sans', sans-serif;
        background: #092756;
        background: -moz-radial-gradient(0% 100%, ellipse cover, rgba(104,128,138,.4) 10%,rgba(138,114,76,0) 40%),-moz-linear-gradient(top,  rgba(57,173,219,.25) 0%, rgba(42,60,87,.4) 100%), -moz-linear-gradient(-45deg,  #670d10 0%, #092756 100%);
        background: -webkit-radial-gradient(0% 100%, ellipse cover, rgba(104,128,138,.4) 10%,rgba(138,114,76,0) 40%), -webkit-linear-gradient(top,  rgba(57,173,219,.25) 0%,rgba(42,60,87,.4) 100%), -webkit-linear-gradient(-45deg,  #670d10 0%,#092756 100%);
        background: -o-radial-gradient(0% 100%, ellipse cover, rgba(104,128,138,.4) 10%,rgba(138,114,76,0) 40%), -o-linear-gradient(top,  rgba(57,173,219,.25) 0%,rgba(42,60,87,.4) 100%), -o-linear-gradient(-45deg,  #670d10 0%,#092756 100%);
        background: -ms-radial-gradient(0% 100%, ellipse cover, rgba(104,128,138,.4) 10%,rgba(138,114,76,0) 40%), -ms-linear-gradient(top,  rgba(57,173,219,.25) 0%,rgba(42,60,87,.4) 100%), -ms-linear-gradient(-45deg,  #670d10 0%,#092756 100%);
        background: -webkit-radial-gradient(0% 100%, ellipse cover, rgba(104,128,138,.4) 10%,rgba(138,114,76,0) 40%), linear-gradient(to bottom,  rgba(57,173,219,.25) 0%,rgba(42,60,87,.4) 100%), linear-gradient(135deg,  #670d10 0%,#092756 100%);
        filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#3E1D6D', endColorstr='#092756',GradientType=1 );
}
.login {
        position: absolute;
        top: 50%;
        left: 50%;
        margin: -150px 0 0 -150px;
        width:300px;
        height:300px;
}
.login h1 { color: #fff; text-shadow: 0 0 10px rgba(0,0,0,0.3); letter-spacing:1px; text-align:center; }

input {
        width: 100%;
        margin-bottom: 10px;
        background: rgba(0,0,0,0.3);
        border: none;
        outline: none;
        padding: 10px;
        font-size: 13px;
        color: #fff;
        text-shadow: 1px 1px 1px rgba(0,0,0,0.3);
        border: 1px solid rgba(0,0,0,0.3);
        border-radius: 4px;
        box-shadow: inset 0 -5px 45px rgba(100,100,100,0.2), 0 1px 1px rgba(255,255,255,0.2);
        -webkit-transition: box-shadow .5s ease;
        -moz-transition: box-shadow .5s ease;
        -o-transition: box-shadow .5s ease;
        -ms-transition: box-shadow .5s ease;
        transition: box-shadow .5s ease;
}
input:focus { box-shadow: inset 0 -5px 45px rgba(100,100,100,0.4), 0 1px 1px rgba(255,255,255,0.2); }
    </style>
    </head>
    <body>
        <h1>Success! The CRYPTOSEC.NET virtual host is working!</h1>
        <div class="login">
        <h1>Login</h1>
        <form method="post">
                <input type="text" name="u" placeholder="Username" required="required" />
                <input type="password" name="p" placeholder="Password" required="required" />
                <button type="submit" class="btn btn-primary btn-block btn-large">Let me in.</button>
        </form>
        </div>
    </body>
</html>


sudo nano /etc/apache2/sites-available/cryptosec.net.conf

<VirtualHost *:80>
    ServerAdmin cryptosec@localhost
    ServerName cryptosec.net
    ServerAlias www.cryptosec.net
    DocumentRoot /var/www/cryptosec
    ErrorLog ${APACHE_LOG_DIR}/error.log
    CustomLog ${APACHE_LOG_DIR}/access.log combined
</VirtualHost>

sudo a2ensite cryptosec.net.conf

sudo apache2ctl configtest

sudo systemctl restart apache2

EN UN NAVEGADOR VERIFICAR EL DNS QUE VERIFIQUE BIEN

www.cryptosec.net


SSL 443

sudo ufw allow "Apache Full"

sudo a2enmod ssl

sudo systemctl restart apache2

##CREAR CERTIFICADOS 

1 CREAR CA VERITAT ABSOLUTA

2 CREAR CERTIFICADO FIRMADO POR CA PARA CRYPTOSEC.NET

  488  openssl genrsa -out cakey.pem 1024

  489  openssl req -new -x509 -nodes -sha1 -days 365 -key cakey.pem -out cacert.pem

  490  openssl req -newkey rsa:2048 -nodes -sha256 -keyout cryptosec_key.pem -out cryptosec_req.pem
  491  ls -l

  492  openssl x509 -CAkey cakey.pem -CA cacert.pem -req -in cryptosec_req.pem -days 3650 -CAcreateserial -out cryptosec_cert.pem



# GENERAR CLAVE CA 
cryptosec@SOACryptosec:~/CERTS$ openssl genrsa -out cakey.pem 1024
Generating RSA private key, 1024 bit long modulus (2 primes)
...........+++++
................+++++
e is 65537 (0x010001)


# GENERAR CERTIFICADO CA
cryptosec@SOACryptosec:~/CERTS$ openssl req -new -x509 -nodes -sha1 -days 365 -key cakey.pem -out cacert.pem
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter '.', the field will be left blank.
-----
Country Name (2 letter code) [AU]:CA
State or Province Name (full name) [Some-State]:Barcelona
Locality Name (eg, city) []:BCN
Organization Name (eg, company) [Internet Widgits Pty Ltd]:Veritat Absoluta
Organizational Unit Name (eg, section) []:Veritat
Common Name (e.g. server FQDN or YOUR name) []:veritat.absoluta.net
Email Address []:veritat@absoluta.net

# GENERAR REQUEST PARA CRYPTOSEC + CREACIÃ“N CLAVE CRYPTOSEC

cryptosec@SOACryptosec:~/CERTS$ openssl req -newkey rsa:2048 -nodes -sha256 -keyout cryptosec_key.pem -out cryptosec_req.pem
Generating a RSA private key
........................+++++
........+++++
writing new private key to 'cryptosec_key.pem'
-----
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter '.', the field will be left blank.
-----
Country Name (2 letter code) [AU]:CA
State or Province Name (full name) [Some-State]:Barcelona
Locality Name (eg, city) []:BCN
Organization Name (eg, company) [Internet Widgits Pty Ltd]:Cryptosec
Organizational Unit Name (eg, section) []:Cryptosec
Common Name (e.g. server FQDN or YOUR name) []:cryptosec.net
Email Address []:cryptosec@cryptosec.net

Please enter the following 'extra' attributes
to be sent with your certificate request
A challenge password []:jupiter
An optional company name []:jupiter
cryptosec@SOACryptosec:~/CERTS$ ls -l
total 16
-rw-rw-r-- 1 cryptosec cryptosec 1143 May 13 20:50 cacert.pem
-rw------- 1 cryptosec cryptosec  887 May 13 20:49 cakey.pem
-rw------- 1 cryptosec cryptosec 1704 May 13 20:51 cryptosec_key.pem
-rw-rw-r-- 1 cryptosec cryptosec 1135 May 13 20:51 cryptosec_req.pem

# FIRMAR REQUEST POR LA CA Y GENERAR CERTIFICADO PARA CRYPTOSEC
cryptosec@SOACryptosec:~/CERTS$ openssl x509 -CAkey cakey.pem -CA cacert.pem -req -in cryptosec_req.pem
 -days 3650 -CAcreateserial -out cryptosec_cert.pem
Signature ok
subject=C = CA, ST = Barcelona, L = BCN, O = Cryptosec, OU = Cryptosec, CN = cryptosec.net, emailAddress = cryptosec@cryptosec.net
Getting CA Private Key




# CONFIGURAR SSL

cryptosec@SOACryptosec:~/CERTS$ sudo nano /etc/apache2/sites-available/cryptosec.net.conf

<VirtualHost *:80>
    ServerAdmin cryptosec@localhost
    ServerName cryptosec.net
    ServerAlias www.cryptosec.net
    DocumentRoot /var/www/cryptosec
    ErrorLog ${APACHE_LOG_DIR}/error.log
    CustomLog ${APACHE_LOG_DIR}/access.log combined
</VirtualHost>

<VirtualHost *:443>
   ServerName cryptosec.net
   DocumentRoot /var/www/cryptosec

   SSLEngine on
   SSLCertificateFile /etc/ssl/certs/cryptosec_cert.pem
   SSLCertificateKeyFile /etc/ssl/private/cryptosec_key.pem
</VirtualHost>

cryptosec@SOACryptosec:~/CERTS$ sudo cp cryptosec_cert.pem /etc/ssl/certs/.
cryptosec@SOACryptosec:~/CERTS$ sudo cp cryptosec_key.pem /etc/ssl/private/.


sudo a2ensite cryptosec.net.conf

sudo apache2ctl configtest

sudo systemctl reload apache2

VERIFICAMOS CON HTTPS